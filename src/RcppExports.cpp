// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// make_similarity_matrix_sp
arma::sp_mat make_similarity_matrix_sp(int n_items, List groups, IntegerVector items);
RcppExport SEXP _SAR_make_similarity_matrix_sp(SEXP n_itemsSEXP, SEXP groupsSEXP, SEXP itemsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_items(n_itemsSEXP);
    Rcpp::traits::input_parameter< List >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type items(itemsSEXP);
    rcpp_result_gen = Rcpp::wrap(make_similarity_matrix_sp(n_items, groups, items));
    return rcpp_result_gen;
END_RCPP
}
// rescale_to_jaccard
arma::sp_mat rescale_to_jaccard(arma::sp_mat& mat);
RcppExport SEXP _SAR_rescale_to_jaccard(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(rescale_to_jaccard(mat));
    return rcpp_result_gen;
END_RCPP
}
// rescale_to_lift
arma::sp_mat rescale_to_lift(arma::sp_mat& mat);
RcppExport SEXP _SAR_rescale_to_lift(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(rescale_to_lift(mat));
    return rcpp_result_gen;
END_RCPP
}
// user_predict_ranking
List user_predict_ranking(arma::sp_mat& aff, arma::sp_mat& sim, const int n_recs, const bool include_seed_items, const bool backfill, const IntegerVector& pop_items);
RcppExport SEXP _SAR_user_predict_ranking(SEXP affSEXP, SEXP simSEXP, SEXP n_recsSEXP, SEXP include_seed_itemsSEXP, SEXP backfillSEXP, SEXP pop_itemsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type aff(affSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sim(simSEXP);
    Rcpp::traits::input_parameter< const int >::type n_recs(n_recsSEXP);
    Rcpp::traits::input_parameter< const bool >::type include_seed_items(include_seed_itemsSEXP);
    Rcpp::traits::input_parameter< const bool >::type backfill(backfillSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type pop_items(pop_itemsSEXP);
    rcpp_result_gen = Rcpp::wrap(user_predict_ranking(aff, sim, n_recs, include_seed_items, backfill, pop_items));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SAR_make_similarity_matrix_sp", (DL_FUNC) &_SAR_make_similarity_matrix_sp, 3},
    {"_SAR_rescale_to_jaccard", (DL_FUNC) &_SAR_rescale_to_jaccard, 1},
    {"_SAR_rescale_to_lift", (DL_FUNC) &_SAR_rescale_to_lift, 1},
    {"_SAR_user_predict_ranking", (DL_FUNC) &_SAR_user_predict_ranking, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SAR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
